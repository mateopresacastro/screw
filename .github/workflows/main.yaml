name: CI/CD

on:
  push:
    branches: [main]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  AWS_REGION: eu-central-1

jobs:
  build-api:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.PAT }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push API image
        uses: docker/build-push-action@v5
        with:
          context: ./api
          platforms: linux/amd64
          push: true
          tags: ${{ env.REGISTRY }}/${{ github.repository }}/api:latest

  build-nextjs:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.PAT }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push NextJS image
        uses: docker/build-push-action@v5
        with:
          context: ./nextjs
          platforms: linux/amd64
          push: true
          tags: ${{ env.REGISTRY }}/${{ github.repository }}/nextjs:latest

  build-proxy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.PAT }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Proxy image
        uses: docker/build-push-action@v5
        with:
          context: ./nginx
          platforms: linux/amd64
          push: true
          tags: ${{ env.REGISTRY }}/${{ github.repository }}/proxy:latest

  deploy:
    needs: [build-api, build-nextjs, build-proxy]
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}
          role-session-name: GitHubActionsSession
          mask-aws-account-id: false

      - name: Deploy to EC2 using Session Manager
        run: |
          # Copy files to instance
          aws ssm put-parameter --name "/screw/deploy-script" --type "String" --value "$(cat deploy.sh)" --overwrite
          aws ssm put-parameter --name "/screw/docker-compose" --type "String" --value "$(cat compose.yaml)" --overwrite
          aws ssm put-parameter --name "/screw/nginx-conf" --type "String" --value "$(cat nginx/nginx.conf)" --overwrite
          aws ssm put-parameter --name "/screw/makefile" --type "String" --value "$(cat Makefile)" --overwrite

          # Run deployment command
          aws ssm send-command \
            --document-name "AWS-RunShellScript" \
            --instance-ids "${{ secrets.INSTANCE_ID }}" \
            --parameters "commands=[
              'cd /home/ec2-user/app',
              'aws ssm get-parameter --name \"/screw/deploy-script\" --query \"Parameter.Value\" --output text > deploy.sh',
              'aws ssm get-parameter --name \"/screw/docker-compose\" --query \"Parameter.Value\" --output text > docker-compose.yaml',
              'aws ssm get-parameter --name \"/screw/nginx-conf\" --query \"Parameter.Value\" --output text > nginx/nginx.conf',
              'aws ssm get-parameter --name \"/screw/makefile\" --query \"Parameter.Value\" --output text > Makefile',
              'chmod +x deploy.sh',
              './deploy.sh'
            ]"
